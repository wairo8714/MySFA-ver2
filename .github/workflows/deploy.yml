name: Deploy to AWS

on:
  push:
    branches: [ main, bugfix, feature ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup SSH with debugging
        run: |
          # SSH鍵を直接ファイルに書き込み
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # SSH鍵の内容を確認（デバッグ用）
          echo "🔐 SSH鍵の内容確認:"
          head -1 ~/.ssh/id_rsa
          tail -1 ~/.ssh/id_rsa
          echo "📏 SSH鍵の行数:"
          wc -l ~/.ssh/id_rsa
          
          # SSH鍵の形式を確認
          echo "🔍 SSH鍵の形式確認:"
          ssh-keygen -y -f ~/.ssh/id_rsa | head -1

      - name: Add EC2 to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection with enhanced debugging
        run: |
          echo "🌐 接続先: ${{ secrets.EC2_HOST }}"
          echo "👤 SSHユーザー: ec2-user"
          echo "📡 GitHub Actions RunnerのIP:"
          curl -s http://checkip.amazonaws.com || echo "IP取得失敗"
          
          # SSH接続テスト
          ssh -v -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} "echo 'SSH connection successful'" || {
            echo "❌ SSH接続に失敗しました"
            echo "🔐 known_hostsの内容:"
            cat ~/.ssh/known_hosts || echo "known_hostsが見つかりません"
            echo "🗝️ SSH鍵の存在確認:"
            ls -la ~/.ssh/id_rsa || echo "SSH鍵が見つかりません"
            echo "🔍 SSH鍵の権限確認:"
            ls -la ~/.ssh/ | grep id_rsa || echo "SSH鍵の権限確認失敗"
            exit 1
          }

      - name: Deploy to EC2
        run: |
          set -x
          echo "Starting deployment to EC2..."

          echo "Uploading files..."
          scp -v -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ~/.ssh/id_rsa -r src/ ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/ || { echo "SCP失敗"; exit 1; }
          echo "File upload completed"

          echo "Uploading Dockerfile..."
          scp -v -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ~/.ssh/id_rsa docker/Dockerfile ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/ || { echo "Dockerfile upload失敗"; exit 1; }
          echo "Dockerfile upload completed"

          echo "Building Docker image..."
          ssh -v -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} "cd /home/ec2-user && sudo docker build -t mysfa-app ." || { echo "Docker build失敗"; exit 1; }
          echo "Docker build completed"

          echo "Starting MySQL container..."
          ssh -v -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} "sudo docker stop mysfa-db || true && sudo docker rm mysfa-db || true && sudo docker run -d --name mysfa-db -e MYSQL_ROOT_PASSWORD=ic8DNPgaIV9_drROsdUzsKxejTI -e MYSQL_DATABASE=mysfa_db -e MYSQL_USER=admin -e MYSQL_PASSWORD=0LmJtwp2V5Y3HyJa9y0YGPjJxC0 -p 3306:3306 mysql:8.0" || { echo "MySQL container start失敗"; exit 1; }
          echo "MySQL container started"

          echo "Waiting for MySQL to be ready..."
          sleep 30

          echo "Restarting Docker container..."
          ssh -v -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} "sudo docker stop mysfa-app || true && sudo docker rm mysfa-app || true && sudo docker run -d --name mysfa-app -p 8000:8000 -e ALLOWED_HOSTS=${{ secrets.EC2_HOST }},mysfa.net mysfa-app" || { echo "Container restart失敗"; exit 1; }
          echo "Container restart completed"

          echo "Performing health check..."
          sleep 10
          curl -v -f https://mysfa.net || { echo "Deployment completed but health check failed"; exit 1; }
          echo "Deployment completed successfully!"